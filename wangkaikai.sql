/*
SQLyog Ultimate v11.33 (64 bit)
MySQL - 5.5.53 : Database - wangkaikai.cn
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`wangkaikai.cn` /*!40100 DEFAULT CHARACTER SET utf8mb4 */;

USE `wangkaikai.cn`;

/*Table structure for table `ali_admin` */

DROP TABLE IF EXISTS `ali_admin`;

CREATE TABLE `ali_admin` (
  `aId` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `aName` varchar(32) NOT NULL DEFAULT '' COMMENT '管理员名',
  `aPortrait` varchar(500) NOT NULL DEFAULT '' COMMENT '头像',
  `apassword` varchar(64) NOT NULL COMMENT '密码',
  `add_time` int(11) NOT NULL COMMENT '添加时间',
  `aStatus` tinyint(1) NOT NULL DEFAULT '1' COMMENT '状态（1正常，0禁用）',
  PRIMARY KEY (`aId`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

/*Data for the table `ali_admin` */

insert  into `ali_admin`(`aId`,`aName`,`aPortrait`,`apassword`,`add_time`,`aStatus`) values (1,'admin','','ff3072218f17250032b0d59088879586',1520738791,1),(2,'alisleepy','','ff3072218f17250032b0d59088879586',1521383666,1);

/*Table structure for table `ali_blog` */

DROP TABLE IF EXISTS `ali_blog`;

CREATE TABLE `ali_blog` (
  `bId` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '博客Id',
  `aId` int(11) NOT NULL COMMENT '发布者Id',
  `catId` int(11) DEFAULT NULL COMMENT '博客分类ID',
  `bTitle` varchar(255) NOT NULL DEFAULT '' COMMENT '博客标题',
  `bInfo` varchar(500) DEFAULT '' COMMENT '摘要',
  `bPic` varchar(500) NOT NULL DEFAULT '' COMMENT '头图',
  `bContent` text NOT NULL COMMENT '博客正文',
  `lId` int(11) DEFAULT NULL COMMENT '标签ID',
  `is_top` tinyint(1) NOT NULL DEFAULT '0' COMMENT '置顶（1是，0否）',
  `add_time` int(11) NOT NULL COMMENT '发布时间',
  `update_time` int(11) NOT NULL COMMENT '最后修改时间',
  `vViews` int(11) NOT NULL DEFAULT '0' COMMENT '浏览次数',
  `vReply_num` int(11) NOT NULL DEFAULT '0' COMMENT '回复数',
  `bStatus` tinyint(1) NOT NULL DEFAULT '1' COMMENT '审核状态（1审核，0未审核）',
  `allowReply` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否允许评论（0不允许，1允许）',
  PRIMARY KEY (`bId`)
) ENGINE=InnoDB AUTO_INCREMENT=57 DEFAULT CHARSET=utf8;

/*Data for the table `ali_blog` */

insert  into `ali_blog`(`bId`,`aId`,`catId`,`bTitle`,`bInfo`,`bPic`,`bContent`,`lId`,`is_top`,`add_time`,`update_time`,`vViews`,`vReply_num`,`bStatus`,`allowReply`) values (13,2,1,'php快速定位当前调用的类的位置','php快速定位当前调用的类的位置，项目文件较多时快速查找调用类在哪儿','','#### php快速定位当前调用的类的位置\r\n\r\n$func = new ReflectionMethod(\'类名\', \'方法名\');\r\n        $start = $func-&gt;getStartLine() - 1;\r\n        $end = $func-&gt;getEndLine() - 1;\r\n        $filename = $func-&gt;getFileName();\r\n        var_dump($start, $end, $filename);exit;',3,1,1525660703,0,84,0,1,0),(14,2,3,'Emacs中使用git操作','在Emacs中安装插件后使用git命令实现gi操作','','## 在Emacs中使用git操作\r\n1、安装 magit 插件\r\n\r\n2、安装后开始使用\r\n\r\n3、使用方法：\r\n\r\n. 使用 *M-x:magit-status* 打开当前仓库查看基本信息\r\n\r\n.使用  *？* 键查看magit命令绑定的键位，方便后续的操作\r\n例如： \r\nc ： commit命令   \r\np ： push命令\r\n	  . 在按c后提示输入提交信息，再按  *C-c C-c* 命令执行提交操作\r\n\r\n.再按 *P*（大写）进入push页面，再按 *p* （小写）执行push操作，提交到远程',4,0,1525694361,0,13,0,1,0),(15,2,1,'富文本编辑器添加文本时写入数据和前端读取该数据注意项','用富文本编辑器添加文本时写入数据和前端读取该数据时不做处理的话数据显示有问题','','#### 用富文本编辑器添加文本时写入数据和前端读取该数据注意项\r\n\r\n对于富文本编辑器提交的内容，在写入数据库时通过函数对html标签进行转义，读取时对数据进行反转义即可：\r\n写入时：htmlspecialchars() \r\n作用：将与，单双引号，大小于号转成html格式   如：&amp;转成&amp;amp;  &quot;转成&amp;qout;   \'转成&amp;#039; &lt;转成&amp;lt;  &gt;转成&amp;gt; \r\n读取时：htmlspecialchars_decode()\r\n作用：对应将上述字符进行反转义',3,0,1525709637,0,35,0,1,0),(16,2,3,'vscode中配置php的xdebug','vscode编辑器配置php的debug调试','','#### vscode中配置php的xdebug\r\nvscode配置php的xdebug，步骤如下：\r\n1、  安装phpdebug插件: *PHP Debug*\r\n2、网上下载php的xdebug扩展（注意根据自己的php版本号进行下载）\r\n 我自己php版本：      5.6.25\r\n 下载的xdebug版本：5.6\r\n保存在 .../ext/ 目录下\r\n3、配置php.ini文件（此文件是apache中的，非php中的）\r\n; XDEBUG Extension\r\n[xdebug]\r\nzend_extension =&quot;D:/wamp/bin/php/php5.6.25/zend_ext/php_xdebug-2.4.1-5.6-vc11-x86_64.dll&quot;\r\nxdebug.remote_enable = on\r\nxdebug.profiler_enable = on\r\nxdebug.profiler_enable_trigger = on\r\nxdebug.profiler_output_name = cachegrind.out.%t.%p\r\nxdebug.profiler_output_dir =&quot;D:/wamp/tmp&quot;\r\nxdebug.show_local_vars=0\r\n;启用远程调试\r\nxdebug.remote_autostart= 1\r\n4、重启服务器，在vscode中点击臭虫，添加php的xdebug配置信息（一般自动生成就可以用了）',7,1,1525710104,0,99,0,1,0),(17,2,1,'Thinkphp框架中自定义修改success和error页面','TP3框架自带的操作成功页和失败页不太好看，可以自定义设置','','##### Thinkphp框架中自定义修改success和error页面\r\nThinkphp框架的默认success和error太难看，可以自定义设置，步骤如下：\r\n**（注意：TP原框架中的success跳转有问题，先修改框架内容）**\r\n在TP的Controller.class.php中L284行下增加exit;\r\n\r\n1、修改配置文件，增加自定义页面路径（在Admin模块下的config.php中增加）\r\n// 跳转页面模板\r\n\'TMPL_ACTION_ERROR\' =&gt; MODULE_PATH.\'View/Common/new_error.html\', //默认错误跳转对应的模板\r\n\'TMPL_ACTION_SUCCESS\' =&gt; MODULE_PATH.\'View/Common/new_success.html\', //默认成功跳转模板文件\r\n2、在上述设置的路径下增加两个页面（笔记中以印象附件形式添加进来）\r\n失败页地址：[失败页](https://app.yinxiang.com/shard/s13/res/de57b351-37e8-47fb-9fbb-6a0d2e6ba17e/new_error.html &quot;失败页&quot;)\r\n成功页地址：[成功页](https://app.yinxiang.com/shard/s13/res/c1e29ab9-c657-48a0-8064-c7759352e334/new_success.html &quot;成功页&quot;)',8,0,1525710598,0,30,0,1,0),(18,2,5,'给html标签加上鼠标划过小手样式','一般，非a标签需要加点击事件，鼠标划过时给它加上小手图标体验更好，所以除了加a标签外通过css样式可以实现','','#### 给html标签加上鼠标划过小手样式\r\n\r\n方法：给当前标签增加样式\r\n`style=&quot;cursor:pointer;&quot;`\r\n\r\neg：增加返回箭头样式，给箭头增加小手\r\n`&lt;span onclick=&quot;go_back()&quot; class=&quot;glyphicon glyphicon-chevron-left&quot; style=&quot;cursor:pointer;padding-right:5px;&quot;&gt;&lt;/span&gt;`',10,0,1525838653,0,25,0,1,0),(19,2,2,'数据列表的全选、反选以及批量操作','后台数据列表一般需要做批量操作，就涉及到全选、反选等操作，在这记录下，后边再遇到就直接拿来即用了','','##### 数据列表的全选、反选以及批量操作\r\n\r\n**html部分代码：**\r\n1、全选的checkbox：  &lt;input type=&quot;checkbox&quot; value=&quot;&quot; id=&quot;all_columnId&quot;&gt;\r\n2、每条数据前边的checkbox:&lt;input type=&quot;checkbox&quot; name=&quot;columnId&quot; class=&quot;chrId&quot; value=&quot;&lt;% $Item.Id %&gt;&quot;&gt;\r\n\r\n**js代码部分：**\r\n全选与反选：\r\n    $(&quot;#all_columnId&quot;).on(&quot;click&quot;, function(){\r\n    	if (this.checked) {\r\n    		$(&quot;[name=columnId]:checkbox&quot;).prop(&quot;checked&quot;, this.checked);\r\n    		//有模板才显示删除按钮\r\n    		var check_value = [];\r\n    		$(&quot;input[name=\'columnId\']:checked&quot;).each(function(){\r\n    			check_value.push($(this).val());\r\n    		});\r\n    		console.log(check_value);\r\n    		check_value = $.grep(check_value, function(n){\r\n    			return $.trim(n).length &gt; 0;\r\n    		});\r\n    		if(check_value.length &gt; 0){\r\n    			$(&quot;#batch_del_fields&quot;).show();\r\n    		}\r\n    	}else{\r\n    		$(&quot;[name=columnId]:checkbox&quot;).prop(&quot;checked&quot;, this.checked);\r\n    		$(&quot;#batch_del_fields&quot;).hide();\r\n    	}\r\n    });\r\n    $(&quot;.table&quot;).on(&quot;click&quot;,&quot;input[name=\'columnId\']&quot;,function(){\r\n    	var check_value = [];\r\n    	$(&quot;input[name=\'columnId\']:checked&quot;).each(function(){\r\n    		check_value.push($(this).val());\r\n    	});\r\n    	console.log(check_value);\r\n    	check_value = $.grep(check_value, function(n){\r\n    		return $.trim(n).length &gt; 0;\r\n    	});\r\n    	var $columnId = $(&quot;input[name=\'columnId\']&quot;);\r\n    	if(check_value.length &gt; 0){\r\n    		$(\'#batch_del_fields\').show();\r\n    	}else{\r\n    		$(\'#batch_del_fields\').hide();\r\n    	}\r\n    	$(&quot;#all_columnId&quot;).prop(&quot;checked&quot;,$columnId.length == $columnId.filter(&quot;:checked&quot;).length ? true : false);\r\n    });\r\n\r\n操作部分：一般是批量删除、批量审核等\r\n    $(&quot;#batch_del_fields&quot;).click(function(){\r\n    	//获取选中的\r\n    	var check_value = [];\r\n    	$(&quot;input[name=\'columnId\']:checked&quot;).each(function(){\r\n    		check_value.push($(this).val());\r\n    	});\r\n    	//check_value就是选中的部分，数组形式\r\n    	console.log(check_value);\r\n		//在这下边执行异步删除等操作\r\n});',2,0,1525935172,0,16,0,1,0),(20,2,1,'unserialize失败解决办法','有些情况下数据serialize之后再取出时unserialize失败，一般是写入和读取时编码不一致导致','','#### unserialize失败解决办法\r\n\r\nfunction mb_unserialize($str) {\r\n    return preg_replace_callback(\'#s:(\\d+):&quot;(.*?)&quot;;#s\',function($match){return \'s:\'.strlen($match[2]).\':&quot;\'.$match[2].\'&quot;;\';},$str);\r\n}\r\n\r\n把字符串先执行该函数再unserialize即可得到正常数据',3,0,1526023107,0,17,0,1,0),(21,2,2,'js在前端json字符串和对象互相转化','前端中通过js把json字符串和对象互相转化','','#### js在前端json字符串和对象互相转化\r\n\r\n//对象转json串  注意：参数必须是对象，数组不起作用，对象格式{\'0\'=&gt;\'a\'}\r\nJSON.stringify( arr );\r\n\r\n//json字符串转对象\r\nJSON.parse( jsonStr );',2,0,1526463635,0,20,0,1,0),(22,2,3,'git执行cherry-pick时修改提交信息','git在执行cherry-pick时不加参数将直接把其他分支的提交合并到本分支，提交信息也一并合并，现在执行命令时带上参数-e可以修改提交信息','','#### git执行cherry-pick时修改提交信息\r\n\r\n在本地分支执行cherry-pick命令时有时需要修改commit message信息，可以加参数-e实现：\r\n\r\n`git cherry-pick -e commidId`\r\n\r\n然后进入vi模式，修改提交信息就行，\r\n执行 wq 保存即可',4,0,1526473554,0,16,0,1,0),(23,2,6,'GO语言学习笔记基础部分--基本数据类型','本想学习web的东西，看到了beego框架，但是后端部分是Go语言，就在下班周末时间看看Go语言，顺带做点记录，纯粹是自己当笔记用。','','# GO语言学习笔记 #\r\n1.数组切片slice：可动态增长的数组\r\n\r\n2.错误处理流程关键字：defer  panic  recover\r\n\r\n3.变量的初始化：以下效果一样\r\n    \r\n	`var a int = 10`\r\n	`var a = 10`\r\n	`a := 10` （推荐写法）\r\n	注意：:= 左侧的变量不能是被声明过的\r\n4.定义常量：**const**关键字定义常量\r\n\r\n5.以大写字母开头的常量在包外可见\r\n\r\n6.Go语言内置的数据类型：\r\n\r\n- 布尔型 bool\r\n- 整形 int8、int16\r\n- 浮点型 float32、64\r\n- 复数 complex64\r\n- 字符串 string\r\n- 字符类型 rune\r\n- 错误类型 error\r\n- 指针 pointer\r\n- 数组 array\r\n- 切片 slice\r\n- 字典 map\r\n- 通道 chan\r\n- 结构体 struct\r\n- 接口 interface\r\n\r\n7.字符串的声明和赋值\r\n\r\n- var str string\r\n- str = &quot;alisleepy&quot;\r\n- 取字符串第一个字符：ch := str[0]\r\n\r\n8.获取字符串长度函数：len(str)\r\n\r\n9.获取数组长度的函数：arrLength := len(array)\r\n\r\n10.创建切片slice：\r\n\r\n	1.基于已有的数组：\r\n	`var myArr [5] int = [5] int{1,2,3,4,5}`\r\n	`var myslice [] int = myArr[:]` //基于myArr所有元素创建切片\r\n	`myslice = myArr[:5]` //基于前五个数组元素创建切片\r\n\r\n	2.直接创建切片：make\r\n	`myslice := make([] int 5)` //创建初始元素个数为5的数组切片，元素初始值为0\r\n11.获取数组切片分配的空间大小：cap(myslice)\r\n\r\n12.获取数组切片中当前存储的元素个数：len(myslice)\r\n\r\n13.常见问题1：定义的数据没使用，编译出错，所以定义的数据必须使用，不使用就不需要定义\r\n\r\n14.代码写完后执行： 在代码当前目录cmd执行：**go run test.go** 就可以看到结果\r\n\r\n15.编辑代码： 在代码当前目录cmd执行： **go build test.go** 就可以看到生成的.exe文件\r\n\r\n16.切片新增元素，即追加元素： **append（被增加的切片，追加的元素）**\r\n	\r\n	第二个参数：追加的元素是一个不定参数，可以直接是多个增加的元素，也可以是一个数组切片\r\n	例如：原切片：slice := make([] int, 5, 10) //切片有五个元素，预留了10个存储空间\r\n	原切片追加元素：slice := append(slice, 1, 2, 3)  //直接增加元素\r\n	第二种追加方法：在slice后追加slice2\r\n				slice2 := make([] int{8,9,10})  //三个元素的切片\r\n				slice := append(alice, slice2...) //**注意，在参数2后边有三个点\r\n\r\n17.基于数组切片创建数组切片：创建数组切片不仅可以基于数组，还可以基于已有的切片创建新的切片\r\n	\r\n	例如：\r\n		oldslice := [] int{1,2,3,4,5} //已有的切片\r\n		newslice := oldslice[:3]      //基于oldslice的前三个元素创建的新的切片\r\n\r\n18.切片的内容复制：**copy(slice1, slice2)** //把slice2的内容复制给slice1，复制时两个切片不一样大，按照较小的数组切片的元素个数进行复制，比如，slice1有5个元素，slice2有3个元素，执行上述函数，只会讲slice2的3个元素到slice1中\r\n	\r\n		\r\n	',12,1,1527178930,0,87,0,1,0),(24,2,7,'windows下安装MongoDB扩展和配置','本地windows下用到了mongodb，就在这顺带做下记录，包括了mongo扩展的安装和本地mongodb数据库的一些准备工作','','## windows下安装MongoDB扩展和配置\r\n1、下载mongoDB扩展，根据当前php版本进行下载\r\n     地址如下：http://pecl.php.net/package/mongo\r\n     我本地php版本是  php-5.6.27-nts       扩展附件如下：\r\n附件下载地址：[我的mongo扩展下载](https://app.yinxiang.com/shard/s13/res/7544d6d8-ec5a-42c1-9807-453b152cb768/php_mongodb.dll &quot;我的mongo扩展下载&quot;)\r\n        \r\n\r\n2、放在php目录下的ext文件夹下\r\n3、修改php.ini文件（有人说是apache根目录下，但我这是别人配的环境，apache下没这个文件，就修改php目录下的php.ini）\r\n     增加：\r\n        [mongoDB]\r\n        extension=php_mongodb.dll\r\n4、重启环境，查看是否有效\r\n5、安装mongodb,安装到某个目录下，例如：D:\\tools\\MongoDB\r\n6、在安装目录下创建三个文件夹 \r\n        conf：存放配置文件\r\n        data：存放数据库文件\r\n        logs：存放日志文件\r\n    1&gt;.conf文件夹下新建文件mongodb.config文件内添加如下配置内容：\r\n        dbpath=D:\\tools\\MongoDB\\Server\\3.4\\data                #数据库路径\r\n        logpath=D:\\tools\\MongoDB\\Server\\3.4\\logs\\mongodb.log   #日志输出文件路径\r\n        logappend=true                                         #错误日志采用追加模式，配置这个选项后mongodb的日志会追加到现有的日志文件，而不是从新创建一个新文件\r\n        journal=true                                           #启用日志文件，默认启用\r\n        quiet=true                                             #这个选项可以过滤掉一些无用的日志信息，若需要调试使用请设置为false\r\n\r\n        port=27017                                             #端口号 默认为27017\r\n    2&gt;.logs文件夹下新建文件mongodb.log文件存放log内容\r\n7.运行cmd.exe进入dos命令界面，执行以下命令：\r\n        &gt; cd D:\\tools\\MongoDB\\Server\\3.4\\bin      //就是进入到mongodb.exe所在文件夹\r\n        &gt; D:\\tools\\MongoDB\\Server\\3.4\\bin -dbpath &quot;d:\\mongodb\\data\\db&quot;    //就是设置数据库path\r\n   执行上述命令启动成功，mongodb监听的端口是27017\r\n8.测试连接：\r\n    新开一个cmd命令窗口，进入到bin目录，输入mongo.exe回车\r\n    出现mongodb的版本信息就说明连接到了mongodb数据库\r\n9.当mongod.exe被关闭时，mongo.exe 就无法连接到数据库了，因此每次想使用mongodb数据库都要开启mongod.exe程序，所以比较麻烦，此时我们可以将MongoDB      安装为windows服务，还是运行cmd，进入bin文件夹，执行下列命令：\r\n     &gt; d:\\mongodb\\bin&gt;mongod --dbpath &quot;d:\\mongodb\\data\\db&quot; --logpath &quot;d:\\mongodb\\data\\log\\MongoDB.log&quot; --install --serviceName &quot;MongoDB&quot;\r\n\r\n    这里MongoDB.log就是开始建立的日志文件，--serviceName &quot;MongoDB&quot; 服务名为MongoDB\r\n     接着启动mongodb服务： &gt; d:\\mongodb\\bin&gt;NET START MongoDB\r\n10. 关闭服务和删除进程：\r\n     &gt; d:\\mongodb\\bin&gt;NET stop MongoDB   (关闭服务)\r\n     &gt; d:\\mongodb\\bin&gt;mongod --dbpath &quot;d:\\mongodb\\data\\db&quot; --logpath &quot;d:\\mongodb\\data\\log\\MongoDB.log&quot; --remove --serviceName &quot;MongoDB&quot;      (删除，注意不是--install了）\r\n        \r\n\r\n        \r\n',13,1,1527252040,0,80,0,1,0),(26,2,6,'GO语言学习笔记基础部分--流程控制','在这儿记录下go语言中常用的几个流程控制语句，和其他语言大同小异，但有一些区别','','## Go语言流程控制 ##\r\n#### 字典类型Map\r\n1、上节遗留：map字典类型\r\n\r\n- 变量声明：`var myMap map[string] PersonInfo`\r\n- 其中，myMap是变量名，string是键的类型，PersonInfo是存放的值类型\r\n\r\n2、创建map：`make()`\r\n\r\n	例子： `myMap = make(map([string] PersionInfo))`\r\n3、创建并初始化：\r\n\r\n	`myMap = map[string] PersionInfo{\r\n		&quot;1234&quot;: PersionInfo{&quot;1&quot;,&quot;wkk&quot;},\r\n	}`\r\n\r\n4、map赋值：myMap[&quot;1234&quot;] = PersonInfo{&quot;1&quot;, &quot;wkk&quot;}\r\n\r\n5、删除map元素：delete()函数删除\r\n	\r\n	`delete(myMap, &quot;1234&quot;)`\r\n\r\n6、从map中查找某个元素：\r\n	\r\n	`代码就是这个：\r\n		value, ok := myMap[&quot;1234&quot;]\r\n		if ok{  //代表找到了value\r\n			//再做关于value的逻辑操作\r\n			...\r\n		}\r\n	`\r\n####流程控制\r\n1、条件语句\r\n\r\n	关键字：if、else、else if\r\n	注意：在有返回值的函数中，不能把return语句放在if...else...结构中，否则编辑失败\r\n2、选择语句\r\n	\r\n	关键字：switch、case、和select(channel通道用)\r\n	注意点： 单个case中可以有多个值\r\n			每一个case后边不需要break来跳出当前case，后边的case也就不会再执行\r\n			在当前case中明确出现‘fallthrough’时，才会执行下一个紧跟的case\r\n			switch后可以不跟表达式，作用等同于if...else...\r\n\r\n3、循环语句\r\n	\r\n	关键字：for和range\r\n	注意：Go语言的循环只支持for\r\n	例子：\r\n		package main\r\n		import &quot;fmt&quot;\r\n		func main()  {\r\n			sum := 0\r\n			for i :=0 ;i &lt; 3; i++ {\r\n				sum += i;\r\n			}\r\n			fmt.Println( sum)\r\n		}\r\n		//运行时，进入当前目录，go run **.go\r\n\r\n4、跳转语句\r\n\r\n	关键字：goto：跳转到某个标签处\r\n	例子：\r\n		func myFunc(){\r\n			i := 0\r\n			HERE:\r\n			fmt.PrintLn(i)\r\n			i++\r\n			if i &lt;10 {\r\n				goto HERE     //跳转到函数内的goto标签处\r\n			}\r\n		}',12,0,1528213394,0,20,0,1,0),(27,2,5,'表单取消历史保存之autocomplete的用法','浏览器开启了表单自动填充设置后，有些表单中的input元素在添加时会以下拉的形式显示以前填写过的表单，有时候可能会影响用户的使用。比如：datetimepicker插件中选择了日期，下次点击插件就会显示以前选过的，导致插件无法选择月份，这就需要去掉这个历史记录的功能，于是在这可以设置input的属性，   autocomplate=\"off\"','','#### 表单取消历史保存之autocomplete的用法\r\n**应用场景**\r\n\r\n浏览器开启了表单自动填充设置后，有些表单中的input元素在添加时会以下拉的形式显示以前填写过的表单，有时候可能会影响用户的使用。比如：datetimepicker插件中选择了日期，下次点击插件就会显示以前选过的，导致插件无法选择月份，这就需要去掉这个历史记录的功能，于是在这可以设置input的属性，   autocomplate=&quot;off&quot;\r\n\r\n使用例子：\r\n\r\n//input中包含该样式的去掉历史记录 \r\n\r\n**autocomplate=&quot;off&quot;**\r\n\r\n``\r\nif($(&quot;.form-control.datetimepicker1&quot;).length&gt;0){\r\n    $(&quot;.form-control.datetimepicker1&quot;).attr(\'autocomplete\', \'off\');\r\n}\r\n``',2,1,1528703165,0,15,0,1,0),(28,2,6,'Go语言学习之函数部分','简单介绍了Go语言中的函数部分','','### 函数部分\r\n1. 函数基本组成：关键字func、函数名、参数列表、返回值、函数体、返回语句\r\n\r\n	例子：\r\n	`func Add(int a, int b) (return int, err error){\r\n	....函数体...\r\n	}\r\n	`\r\n\r\n	如果相邻参数类型相同，可以简写，eg：  a,b int  //a、b参数类型相同\r\n\r\n2. 函数调用：\r\n	\r\n	使用方式：首先导入该函数所在的包，再直接通过点号‘.’来使用\r\n	\r\n	例子：\r\n\r\n	import &quot;mymath&quot;  //导入函数所在包\r\n\r\n	c:= mymath.Add(1, 2)  //使用格式\r\n\r\n	**注意：**小写字母开头的函数只能在本包中使用（只在本包可见），大写字母开头的函数才能被其他包使用\r\n\r\n3. 不定参数：\r\n	- 指的是传入的参数个数不定数量\r\n	- 用法：函数参数用 **“...类型”**指定\r\n	- 例如：\r\n		 \r\n			func myfun(args ...int){\r\n				for _, arg := range args {\r\n					fmt.PrintLn(arg)\r\n				}\r\n			} \r\n	- 任意类型的不定参数：\r\n		- 参数类型用：interface{}\r\n		- 例如：\r\n			- func Printf(format string, args ...interface{}){ //参数类型为interface{}表示任意类型都可以传进来\r\n			\r\n				}\r\n\r\n4. 代码实例：\r\n    \r\n ```\r\n	package main\r\n	import &quot;fmt&quot;\r\n	func MyPrintf(args ...interface{}){ //不定参数的函数\r\n		for _, arg := range args{\r\n			switch arg.(type) {  //arg的数据类型\r\n				case int:\r\n					fmt.Println(arg, &quot;is an int value&quot;)\r\n				case int64:\r\n					fmt.Println(arg, &quot;is an int64 value&quot;)\r\n				case string:\r\n					fmt.Println(arg, &quot;is an string value&quot;)\r\n				case float32:\r\n					fmt.Println(arg, &quot;is an float32 value&quot;)\r\n			}\r\n		}\r\n	}\r\n	func main(){\r\n		var v1 int = 1\r\n		var v2 int64 = 234\r\n		var v3 string = &quot;hello&quot;\r\n		var v4 float32 = 1.234\r\n		MyPrintf(v1, v2, v3, v4)\r\n	}\r\n ```',12,1,1528992840,0,13,0,1,0),(29,2,2,'js获取子节点，js修改属性值','js获取子节点，js修改属性值','','### js获取子节点和修改input的文本框内容\r\n\r\n1. js获取子节点：\r\n    ```\r\n    $(&quot;#&quot;+defaultPVItemId).children().eq(3); //获取某个选择器下的第四个子节点\r\n    例如：$(&quot;#&quot;+defaultPVItemId).children().eq(3).find(\'input\').val(\'当前位置\'); //修改某个选择器下的第四个子节点的input节点的输入框文本内容\r\n    ```\r\n2. js修改属性内容：\r\n\r\n    ```\r\n    attr():该方法一般是获取某个属性值，或者修改某个属性值，只有一个参数表示获取属性值，带第二个参数表示修改属性值\r\n\r\n    例如：\r\n    $(&quot;#&quot;+defaultPVItemId).children().eq(3).find(\'input\').attr(\'value\');  //获取input的value值\r\n    $(&quot;#&quot;+defaultPVItemId).children().eq(3).find(\'input\').attr(\'readonly\', \'readonly\'); //修改input的readonly属性值\r\n    ```',2,0,1529827040,0,5,0,1,0),(30,2,3,'本地windows下搭建git的本地服务器','在本地windows环境下搭建git服务器，在完全断网的情况下也可以执行所有git操作，包括push等','','### 本地windows下搭建git的本地服务器\r\n1. 准备工作：\r\n	- 本地安装java环境，配置环境变量（略）\r\n	- 下载gitblit文件，百度一大堆\r\n2. 开始第一步：\r\n\r\n	减压gitblit压缩包到某个目录下，比如我在：H:\\gitblit\r\n3. 第二步：\r\n\r\n	修改gitblit安装目录下的data文件下的gitblit.properties\r\n	\r\n	第17行处：include = defaults.properties 修改为 include = my.properties\r\n4. 第三步：\r\n	\r\n	从data文件夹下找到defaults.properties文件，这是gitblit的默认配置，复制一遍该文件，并改名为上诉修改的配置名my.properties\r\n5. 第四步：\r\n	\r\n	在gitblit目录下创建仓库目录：project（远程代码存放目录，但是我本地没生效，自动创建了一个其他的目录，这块疑问）\r\n6. 第五步：\r\n	\r\n	打开my.properties，修改如下几处：\r\n	\r\n	第31行处：git.repositoriesFolder = ${baseFolder}/git 修改为：git.repositoriesFolder = H:\\gitblit\\project （修改为自定义的仓库目录，但我本地没生效，代码最后push后不在该目录下）\r\n\r\n	第1993行附近：server.httpPort = 0 修改为：server.httpPort = 10101（修改http端口协议，默认0表示禁止http协议）\r\n\r\n	第2020行左右：server.httpBindInterface = 192.168.199.188 （设定服务器IP为本地电脑IP）\r\n7. 搭建过程完毕，接下来进行启动，运行gitblit根目录下的gitblit.cmd 批处理文件\r\n8. 打开浏览器，输入192.168.199.188：10101 （本地IP加端口号）即可运行（亲测成功）\r\n9. 用户名、密码都为：admin，登录后创建版本库\r\n10. 在本地的其他项目根目录下执行:git init (创建本地仓库，并进行测试)\r\n	\r\n	git add .\r\n\r\n	git commit -m &quot;第一次提交&quot; .\r\n	\r\n	git remote add origin ssh://admin@192.168.199.188:29418/go/beego.git (本地仓库和远程关联) 	\r\n\r\n	git push -u origin master\r\n\r\n	输入密码，就可以把本地代码push到远程\r\n\r\n	在gitblit页面内可以查看到提交的记录，同时在本地的远程仓库目录下也可以看到push过来的项目文件（在这我本地代码没push到project目录下，而是到了gitblitproject这个自动创建的文件夹下，但大体上没影响本地git服务器的使用）',4,1,1529850586,0,33,1,1,0),(31,2,6,'Go语言学习之常用命令','简单记录下常用的几个go命令行','','### go常用命令\r\n- go get：获取远程包（得装git）\r\n- go run:直接运行程序（写代码时调试用）\r\n- go build:测试编译，检查是否有编译错误\r\n- go fmt:格式化代码（一般不咋用，IDE都自带了）\r\n- go install:编译包文件并编译整个程序\r\n- go test:运行测试文件（运行_test的文件）\r\n- go doc:查看文档（chm文档）\r\n\r\n在本地查看go官网内容：\r\n\r\n	在bash内输入：godoc -http=:8080,浏览器内打开localhost:8080就可以查看go官网内容',12,1,1529943841,0,15,0,1,0),(32,2,5,'通过jquery隐藏和显示元素','显示隐藏元素常用的几种方法，比较简单','','### 通过jquery隐藏和显示元素\r\n#调用jquery本身提供的函数\r\n```\r\n$(&quot;xxx&quot;).hide();//隐藏xxx\r\n$(&quot;xxx&quot;).show();//显示xxx\r\n```\r\n#操作css\r\n```\r\n$(&quot;xxx&quot;).css({&quot;display&quot;:&quot;none&quot;});//隐藏xxx\r\n$(&quot;xxx&quot;).css({&quot;display&quot;:&quot;block&quot;});//显示xxx\r\n```\r\n#attr设置属性\r\n```\r\n$(&quot;xxx&quot;).attr(&quot;style&quot;,&quot;display:none&quot;);//隐藏xxx\r\n$(&quot;xxx&quot;).removeAttr(&quot;style&quot;);//去掉style属性（当然style都没了，一定不会存在隐藏的css了，慎用）\r\n```',10,0,1530097384,0,10,0,1,0),(33,2,1,'windows环境下安装yaf框架','windows环境下安装yaf框架，做下简单的记录','','### windows环境下安装yaf框架\r\n在windows下安装yaf框架\r\n\r\n准备工作：\r\n- php环境（过程略，wamp，xampp，phpstudy都行，php版本大于5.3）\r\n- git工具（需要从github上拉取yaf框架源码）\r\n- **yaf扩展**：（yaf框架是php扩展的框架，必须安装php_yaf扩展）\r\n\r\n搭建过程：\r\n1. 下载安装yaf扩展：（根据当前的php版本以及NTS 还是TS的版本，以及X86或者X64进行下载，同时注意不要下载太新的3.0+版本，需要php7才支持）\r\n- 下载地址：[https://pecl.php.net/package/yaf](https://pecl.php.net/package/yaf &quot;下载地址&quot;)\r\n- 安装扩展：把下载的php_yaf.dll放在php的ext目录下，修改php.ini加入*extension=php_yaf.dll*\r\n- 重启apache，输出phpinfo搜索php_yaf进行验证\r\n2. 生成yaf框架文件\r\n- yaf的github项目地址：https://github.com/laruence/yaf/tree/php5\r\n- 找个空文件夹执行：git clone https://github.com/laruence/yaf.git\r\n3. 生成yaf项目文件\r\n- *以下这一步我没成功，是通过命令行生成，但是我这边失败了，也可以通过其他方法获取项目文件（就去别的地方下载一个现成的空的项目就好）*\r\n- 命令行生成：\r\n\r\n    在CMD下切换到tools/cg 目录下 使用php yaf_cg test命令（text是项目名称，可以修改）\r\n\r\n    然后在tools/cg/output目录下找到test文件夹，这就是生成的项目文件，拷贝到服务器目录下htdocs或者www目录下\r\n\r\n    浏览器输入*localhost/test*查看是否成功\r\n\r\n- **下载空的项目文件获取**：因为我就是上述命令行生成失败，还没仔细看，所以在这采取的这种方式，从别处下载一个空的项目文件，简单粗暴\r\n\r\n    下载地址：[https://download.csdn.net/download/wkkvow/10511703](https://download.csdn.net/download/wkkvow/10511703 &quot;yaf项目文件&quot;)',15,1,1530422277,0,20,0,1,0),(34,2,5,'本地数据存储解决方案以及cookie的坑','主要介绍了一些数据保存在本地中的一些处理方法，包括cookie和webSrorage的保存优缺点介绍，以及简单介绍cookie中的坑','','### 本地数据存储解决方案以及cookie的坑\r\n\r\n**问题：**\r\n\r\ncookie过长导致页面打开失败\r\n\r\n**背景：** \r\n    \r\n在公司的项目中有一个需求是打开多个工单即在同一个页面中打开了多个tab（iframe），但是需要在刷新时只刷新当前页面仍然保留着多个iframe，现在刷新有两种方式，第一种是键盘中按F5或者ctrl+F5或者ctrl+R，第二种是点击浏览器的左上角进行刷新，点击F5时可以通过监听键盘的F5点击事件进行阻止默认刷新达到只刷新当前iframe，但是当用户点击浏览器的刷新后必须请求后端重新加载页面，所以这时需要记录下当前打开的一些iframe的信息，包括href等。\r\n\r\n**解决点击F5只刷新本iframe：**\r\n\r\n代码如下：\r\n```\r\n//F5键 F5 和 ctrl R 只刷新当前iframe\r\ndocument.onkeydown = function (e){\r\n    e = e || window.event;\r\n    if((e.ctrlKey &amp;&amp; e.keyCode == 82) || e.keyCode == 116) {//F5 和 ctrl R 刷新，禁止\r\n        var cur_href= window.location.href; //获取到当前iframe的href\r\n        e.preventDefault();      //阻止默认刷新\r\n        location.href=cur_href;  //刷新当前iframe\r\n    }\r\n}\r\n```\r\n\r\n**解决点击浏览器刷新（大坑）：**\r\n\r\n这时，点击浏览器的刷新后必然会想服务端重新请求地址获取信息，所以在前边打开多个iframe的过程中必须保留打开的iframe的href以及title等信息，这时坑就来了。\r\n\r\n**解决方案一：** 把打开的iframe的信息保存在后端，每打开一个iframe就向后端发请求保存iframe的信息，打开多个就进行追加\r\n\r\n优点：\r\n- 简单粗暴\r\n\r\n缺点：\r\n- 每打开或者关闭一个iframe都得请求后端，存在效率等问题\r\n\r\n**解决方案二之cookie大坑：** 不把打开的iframe信息保存在后端，保存在浏览器本地的cookie中\r\n\r\n优点：\r\n- 简单粗暴\r\n- 数据在本地，不会与后端交互，效率高\r\n\r\n缺点：\r\n- cookie是有大小限制的，每个域名下个数有限制，重要的是每个cookie的数据大小不能超过4kb（局限性最大的点）\r\n- cookie的有效时间设置，如果不设置失效时间就会一直保存在本地，关闭浏览器也会保存在硬盘中，不会自动销毁，最终导致数量可能过多\r\n- 安全性不高\r\n- 每次访问都要传送cookie给服务器，浪费带宽\r\n\r\n当时做的时候就是没考虑到本项目中其他同事也用到了大量的cookie同时没考虑到用户打开大量iframe后导致该cookie值超过4kb的限制，最终导致cookie过长使得页面打开失败（吃一堑长一智）\r\n\r\n**解决方案三之localStorage:** 把ifrmae的信息保存在localStorage中\r\n\r\n优点：\r\n- 简单\r\n- 存储大小为5M，足够使用\r\n- 保存在本地，不会与后端交互\r\n\r\n缺点：\r\n- 保存在localStorage中的数据数永久保留在本地，关闭会话（浏览器tab的关闭或关闭浏览器不会销毁）\r\n- 由于需求是用户关闭浏览器tab或者关闭浏览器之后就清除这些保存的iframe的信息，所以localStorage中的数据无法清理（原因：js无法监听浏览器的关闭）\r\n\r\n**解决方案四之sessionStorage:**把ifrmae的信息保存在sessionStorage中\r\n\r\n优点：\r\n- 简单\r\n- 存储大小为5M，足够使用\r\n- 保存在本地，不会与后端交互\r\n- 基于会话存在，会话关闭数据清理（正好符合了产品的需求，完美解决）\r\n\r\n**涉及到的方法：**\r\n```\r\n保存localStorage：localStorage.setItem(&quot;key&quot;,&quot;value&quot;);\r\n获取localStorage：localStorage.getItem(&quot;key&quot;);\r\n\r\n保存sessionStorage：sessionStorage.setItem(&quot;key&quot;,&quot;value&quot;);\r\n获取sessionStorage: sessionStorage.getItem(&quot;key&quot;);\r\n```\r\n',2,1,1530722057,0,11,0,1,0),(36,2,1,'php静态变量、linux下换行、php数组去空','简单记一下当复习使用，静态变量的使用、linux下换行、php数组去空','','### php静态变量、linux下换行、php数组去空\r\n1. php静态变量：\r\n- static 关键字声明\r\n- 使用时：\r\n    - 使用静态变量  self::$a\r\n\r\n    - 使用静态方法  （类内）self::get()、（类外）class::get()\r\n\r\n2. linux下换行:\r\n- 换行：&quot;\\n&quot; （必须是双引号）\r\n\r\n3. php数组去空：\r\n- array_filter($array)',3,0,1532072180,0,1,0,1,0),(37,2,3,'phpstorm设置编码格式','phpstorm设置编码格式,记录一下','','### phpstorm设置编码格式\r\n默认： utf-8格式\r\n\r\n    设置方法： file -&gt; settings -&gt; Editor -&gt; file encodng -&gt; project encding(选择编码格式) -&gt; apply -&gt; OK',3,0,1532918422,0,2,0,1,0),(38,2,2,'js获取当前时间','js获取当前时间，年月日时分秒','','### js获取时间函数\r\n```\r\nvar myDate = new Date;\r\nvar year = myDate.getFullYear();//获取当前年\r\nvar yue = myDate.getMonth()+1;//获取当前月\r\nvar date = myDate.getDate();//获取当前日\r\nvar h = myDate.getHours();//获取当前小时数(0-23)\r\nvar m = myDate.getMinutes();//获取当前分钟数(0-59)\r\nvar s = myDate.getSeconds();//获取当前秒\r\n```',2,0,1533372363,0,3,0,1,0),(39,2,2,'js判断元素是否是disable状态','js判断元素是否是disable状态,用prop(),在这简单记一下，并写两个简单例子','','### js判断元素是否是disable状态\r\n1. jquery判断元素状态用$(select).prop(属性值) == true\r\n- js判断button是否可以点击：\r\n```\r\n    //判断button是否为不可点击状态\r\n    if($(&quot;#buyButton&quot;).prop(&quot;disabled&quot;) == true){}\r\n\r\n    //判断button是否为不可点击状态\r\n    if($(&quot;#buyButton&quot;).prop(\'disabled\') != true){}\r\n\r\n    /**\r\n     * 购买按钮失效\r\n     */\r\n    that.disableBuyButton = function(){\r\n        if($(&quot;#buyButton&quot;).prop(\'disabled\') != true){\r\n            $(&quot;#buyButton&quot;).prop(\'disabled\', \'disabled\');\r\n            $(&quot;#buyButton&quot;).css(&quot;background&quot;, &quot;#8f8f96&quot;);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 购买按钮激活\r\n     */\r\n    that.ableBuyButton = function(){\r\n        if($(&quot;#buyButton&quot;).prop(&quot;disabled&quot;) == true){\r\n            $(&quot;#buyButton&quot;).removeProp(&quot;disabled&quot;);\r\n            $(&quot;#buyButton&quot;).css(&quot;background&quot;,&quot;#52a9e9&quot;);\r\n        }\r\n    }\r\n```',2,0,1533871504,0,2,0,1,0),(40,2,2,'js计算两个日期的天数差值','js计算两个日期的天数差值','','---\r\ntitle: js计算两个日期的天数差值\r\ntags: js\r\nnotebook: js\r\n---\r\n### js计算两个日期的天数差值\r\n通过两个日期计算这两个日期之间的天数差值\r\n```\r\n/**\r\n * 计算天数差的函数，通用\r\n * @param sDate1\r\n * @param sDate2\r\n * @returns {Number}天数\r\n */\r\nfunction DateDiff(sDate1,  sDate2){ //sDate1和sDate2是2006-12-18格式\r\n    var  aDate,  oDate1,  oDate2,  iDays\r\n    aDate  =  sDate1.split(&quot;-&quot;)\r\n    oDate1  =  new  Date(aDate[1]  +  \'-\'  +  aDate[2]  +  \'-\'  +  aDate[0])    //转换为12-18-2006格式\r\n    aDate  =  sDate2.split(&quot;-&quot;)\r\n    oDate2  =  new  Date(aDate[1]  +  \'-\'  +  aDate[2]  +  \'-\'  +  aDate[0])\r\n    iDays  =  parseInt(Math.abs(oDate1  -  oDate2)  /  1000  /  60  /  60  /24)    //把相差的毫秒数转换为天数\r\n    return  iDays\r\n}\r\n```',2,0,1534849966,0,2,0,1,0),(41,2,3,'phpstorm的个人配置文件','phpstorm的个人配置文件，放在这儿以后用的时候方便点','','### phpstorm的个人配置文件\r\n以下附件内容是个人的phpstorm配置文件：\r\n\r\n[https://app.yinxiang.com/shard/s13/res/32cdce07-68bb-4e8f-bfb0-a5291730b596/wkksettings.jar](https://app.yinxiang.com/shard/s13/res/32cdce07-68bb-4e8f-bfb0-a5291730b596/wkksettings.jar &quot;附件，点我下载&quot;)',11,0,1534988149,0,12,0,1,0),(42,2,3,'cmder个人配置文件','cmder个人配置文件，放在这以防后边使用时直接下载，不用再次配置了','','### cmder个人配置文件\r\n\r\n以下附件是自己的cmder配置文件：\r\n\r\n[https://app.yinxiang.com/shard/s13/res/30e84035-5f0f-4baf-b18c-a84ce45ec8b9/wkkcmder.xml](https://app.yinxiang.com/shard/s13/res/30e84035-5f0f-4baf-b18c-a84ce45ec8b9/wkkcmder.xml &quot;cmder配置文件，点我下载&quot;)',6,0,1534988469,0,8,0,1,0),(43,2,2,'js面向对象的写法','一般在写某个功能块的js代码时，这样处理js代码比较好维护，所有功能点不要一直堆在一个方法里，尽量拆分成一个个小的单独模块，使用哪个用那个，在这简单记一下','','### js面向对象的写法\r\n一、在html中引入该js文件，使用时：\r\n```\r\n&lt;script&gt;\r\n    var BuyBw8Product = new buyBw8Product();\r\n&lt;/script&gt;\r\n```\r\n二、一般写一个较大的模块的js代码时，采用这种方法写js\r\n\r\n新建一个js,内容结构如下：\r\n```\r\n/**\r\n * create by wkk\r\n * 描述：***\r\n */\r\n!function(){\r\n    function b(){\r\n        var that = this;\r\n        //当前是否到期集合\r\n        this.moduleIsExpired = {\r\n            ticketIsExpired : $(&quot;#ticketIsExpired&quot;),\r\n            ccIsExpired     : $(&quot;#ccIsExpired&quot;),\r\n            imIsExpired     : $(&quot;#imIsExpired&quot;)\r\n        };\r\n        //工单购买坐席数的change事件\r\n        $(&quot;#ticketSeatNum&quot;).on(\'change\', (function(){\r\n            var ticketSeatNum = $(this).val() ? $(this).val() : 0;\r\n            if(parseInt(ticketSeatNum) &lt;= 0){\r\n                alert(\'请填写正确的工单购买坐席数\');\r\n                that.disableBuyButton();\r\n                // 清空工单的金额，新计算余额\r\n                that.emptyMoney(\'ticket\');\r\n                return false;\r\n            }\r\n            //购买工单周期\r\n            var ticketSeatYear = parseInt($(that.SeatYearSelect.ticketSeatYear).val());\r\n            //不存在周期，表示不过期并且原有坐席数不为0\r\n            if($(&quot;#ticketSeatYear&quot;).length &lt;= 0){\r\n                //计算新的周期\r\n                var ticketCurExpireTime = $(that.allCurExpireTime.ticketCurExpireTime).text();\r\n                //从今天到到期日期的天数差值\r\n                var todayDate = that.getTodayDate();\r\n                var expireTimeDays = that.DateDiff(todayDate, ticketCurExpireTime);\r\n                var ticketSeatYear = (parseInt(expireTimeDays)/365).toFixed(8);\r\n            }\r\n            if(ticketSeatYear &gt; 0){\r\n                //计算工单的金额\r\n                var ticketPrice = $(that.productPrice.ticketPrice).text();\r\n                //四舍五入-&gt;向下取整\r\n                var ticketTotalAmount = Math.floor(that.calcAmount(ticketSeatNum, ticketPrice, ticketSeatYear));\r\n\r\n                //显示模块金额和总金额以及折扣信息\r\n                that.showModuleTotalAmountAndTotalMoneyAndDiscount(\'ticket\', ticketTotalAmount, ticketSeatNum, ticketSeatYear);\r\n            }\r\n        }));\r\n        /**\r\n         * 比较两个日期的大小,返回值比较大的日期\r\n         * @param date1\r\n         * @param date2\r\n         * @returns date\r\n         */\r\n        this.tab = function (date1,date2){\r\n            var oDate1 = new Date(date1);\r\n            var oDate2 = new Date(date2);\r\n            if(oDate1.getTime() &gt;= oDate2.getTime()){\r\n                return date1;\r\n            } else {\r\n                return date2;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 返回今天的日期  格式：2018-08-08\r\n         */\r\n        this.getTodayDate = function(){\r\n            var myDate = new Date;\r\n            var year = myDate.getFullYear();//获取当前年\r\n            var month = myDate.getMonth()+1;//获取当前月\r\n            var date = myDate.getDate();//获取当前日\r\n            return year+\'-\'+month+\'-\'+date;\r\n        }\r\n\r\n        /**\r\n         * 计算天数差的函数，通用\r\n         * @param sDate1\r\n         * @param sDate2\r\n         * @returns {Number}\r\n         */\r\n        this.DateDiff = function(sDate1,  sDate2){ //sDate1和sDate2是2006-12-18格式\r\n            var  aDate,  oDate1,  oDate2,  iDays\r\n            aDate  =  sDate1.split(&quot;-&quot;)\r\n            oDate1  =  new  Date(aDate[1]  +  \'-\'  +  aDate[2]  +  \'-\'  +  aDate[0])    //转换为12-18-2006格式\r\n            aDate  =  sDate2.split(&quot;-&quot;)\r\n            oDate2  =  new  Date(aDate[1]  +  \'-\'  +  aDate[2]  +  \'-\'  +  aDate[0])\r\n            iDays  =  parseInt(Math.abs(oDate1  -  oDate2)  /  1000  /  60  /  60  /24)    //把相差的毫秒数转换为天数\r\n            return  iDays\r\n        }\r\n    }\r\n    window.buyBw8Product = b;\r\n}();\r\n```',2,0,1535595816,0,2,0,1,0),(44,2,1,'专属注释，神兽护体','神兽护体无bug','','### 注释：神兽护体\r\n```\r\n/**\r\n * ━━━━━━神兽出没━━━━━━\r\n * 　　　┏┓　　　┏┓\r\n * 　　┏┛┻━━━┛┻┓\r\n * 　　┃　　　　　　　┃\r\n * 　　┃　　　━　　　┃\r\n * 　　┃　┳┛　┗┳　┃\r\n * 　　┃　　　　　　　┃\r\n * 　　┃　　　┻　　　┃\r\n * 　　┃　　　　　　　┃\r\n * 　　┗━┓　　　┏━┛\r\n * 　　　　┃　　　┃  神兽保佑\r\n * 　　　　┃　　　┃  代码无bug　　\r\n * 　　　　┃　　　┗━━━┓\r\n * 　　　　┃　　　　　　　┣┓\r\n * 　　　　┃　　　　　　　┏┛\r\n * 　　　　┗┓┓┏━┳┓┏┛\r\n * 　　　　　┃┫┫　┃┫┫\r\n * 　　　　　┗┻┛　┗┻┛\r\n * ━━━━━━感觉萌萌哒━━━━━━\r\n */\r\n ```',3,0,1536046012,0,2,1,1,0),(45,2,4,'windows server服务器上mysql远程连接失败的坑','趁这阿里云活动，和朋友合伙买了个服务器，最坑的是没想到他买的是windows Server的，反正便宜，将就着用吧，自己装好了wamp环境，在服务器上可以在本地访问数据库（废话么），但是在本地机器一直访问不了','','### windows server服务器上mysql远程连接失败的坑\r\n背景：趁这阿里云活动，和朋友合伙买了个服务器，最坑的是没想到他买的是windows Server的，反正便宜，将就着用吧，自己装好了wamp环境，在服务器上可以在本地访问数据库（废话么），但是在本地机器一直访问不了\r\n- 首先：创建的账户host是 % ，允许任何地址远程访问\r\n- 其次：权限我进行了修改，执行了 flush privileges;\r\n- 最后：我关闭了服务器的防火墙\r\n---\r\n\r\n#### 解决办法\r\n1. 找阿里云-&gt;创建工单让他们看-&gt;他们没权限，只能给你一些建议（他们没权限看，给了建议：安全组中有没有放行3306端口）\r\n2. 添加安全组规则，放行3306端口，教程地址：https://help.aliyun.com/document_detail/25471.html?\r\n- 具体步骤：左侧导航-&gt;网络和安全-&gt;安全组-&gt;左上角选择自己服务器地域-&gt;配置规则-&gt;右上角‘快速创建规则’-&gt;授权对象改为‘0.0.0.0/0’（表示允许任何IP进行访问）\r\n\r\n---\r\n\r\n#### Mysql创建用户和授权\r\n1. MySQL命令行新建用户\r\n```\r\n//登录MYSQL\r\n@&gt;mysql -u root -p\r\n@&gt;密码\r\n//创建用户\r\nmysql&gt; insert into mysql.user(Host,User,Password) values(\'localhost\',\'alisleepy\',password(\'123456\')); //Host值：localhost表示只允许本地，%表示任何地址都可以访问\r\n```\r\n2. 刷新系统权限表\r\n```\r\nmysql&gt;flush privileges;\r\n```\r\n3. MySQL命令行为用户授权\r\n```\r\n//登录MYSQL\r\nmysql -u root -p \r\n//创建数据库\r\nmysql&gt;create database phplampDB;\r\n//授权alisleepy用户拥有phplamp数据库的所有权限\r\ngrant all privileges on phplampDB.* to alisleepy@localhost identified by \'123456\'; //在这Host只是本地localhost\r\n//刷新系统权限表\r\nflush privileges;\r\n```',14,1,1536119730,0,14,0,1,0),(46,2,2,'百度地图在web中的使用（一）','百度地图简单用法，包括：获取当前位置、根据经纬度获取位置、智能搜索、监听事件、增加标注等','','### 百度地图在web中的使用（一）\r\n背景：在公司做一个地理位置的自定义字段，需要用到地图来获取经纬度和地址，在这选择了百度地图\r\n\r\n#### 准备工作 ####\r\n- 注册百度地图开发者，创建应用获取key [http://lbsyun.baidu.com/](http://lbsyun.baidu.com/ &quot;百度地图api开发者中心&quot;)\r\n\r\n#### 使用过程 ####\r\n1. 引入js文件\r\n```\r\n&lt;script type=&quot;text/javascript&quot; src=&quot;https://api.map.baidu.com/api?v=2.0&amp;ak=生成的key&quot;&gt;&lt;/script&gt;\r\n```\r\n2. 创建一个div容器用来显示地图：\r\n```\r\n&lt;div id=&quot;map&quot;&gt;&lt;/div&gt;\r\n```\r\n3. 实例化地图：\r\n```\r\n//百度地图API功能\r\nvar map = new BMap.Map(&quot;map&quot;);    //创建Map实例\r\n```\r\n4. 使用百度地图：\r\n```\r\nmap.centerAndZoom(new BMap.Point(116.403963, 39.915119), 12);  // 初始化地图,设置中心点坐标和地图级别，北京-天安门\r\n	//添加地图类型控件\r\n	map.addControl(new BMap.MapTypeControl({\r\n		mapTypes:[\r\n            BMAP_NORMAL_MAP,\r\n            BMAP_HYBRID_MAP\r\n        ]}));\r\n	map.setCurrentCity(&quot;北京&quot;);          // 设置地图显示的城市 此项是必须设置的\r\n    map.enableScrollWheelZoom(true);     //开启鼠标滚轮缩放\r\n```\r\n5. 百度地图获取当前位置：（基于浏览器获取）\r\n```\r\n	var geolocation = new BMap.Geolocation();          //实例化\r\n	geolocation.getCurrentPosition(function(r){        //获取当前位置方法  \r\n		if(this.getStatus() == BMAP_STATUS_SUCCESS){\r\n			var mk = new BMap.Marker(r.point);         //r就是获取到的信息\r\n			map.addOverlay(mk);        //创建标注\r\n			map.panTo(r.point);        //标注移到这个地点\r\n			alert(\'您的位置：\'+r.point.lng+\',\'+r.point.lat);\r\n		}\r\n		else {\r\n			alert(\'failed\'+this.getStatus());\r\n		}        \r\n	},{enableHighAccuracy: true})\r\n```\r\n5. 百度地图里的智能搜索：\r\n```\r\n    //内部自定义函数，根据ID获取对象\r\n    function G(id) {\r\n        return document.getElementById(id);\r\n    }\r\n    /*----------begin------*/\r\n    var ac = new BMap.Autocomplete(    //建立一个自动完成的对象\r\n        {&quot;input&quot; : &quot;suggestId&quot;\r\n            ,&quot;location&quot; : map\r\n        }\r\n    );\r\n    var myValue;    //搜索内容\r\n    //鼠标点击下拉列表后的事件\r\n    ac.addEventListener(&quot;onconfirm&quot;, function(e) {  //确定事件，得到搜索的地址信息\r\n        var _value = e.item.value;\r\n        myValue = _value.province +  _value.city +  _value.district +  _value.street +  _value.business;\r\n        G(&quot;searchResultPanel&quot;).innerHTML =&quot;onconfirm&lt;br /&gt;index = &quot; + e.item.index + &quot;&lt;br /&gt;myValue = &quot; + myValue;\r\n        setPlace();\r\n    });\r\n    //搜索地址\r\n    function setPlace(){\r\n        //搜索后点击时先清空原搜搜记录\r\n        $(\'#searchAddress\').empty();   //之前的搜索结果清空\r\n        var local = new BMap.LocalSearch(map, { //智能搜索\r\n            onSearchComplete: myFun\r\n        });\r\n        local.search(myValue);\r\n        function myFun(){\r\n            var sp = local.getResults().getPoi(0);    //获取第一个智能搜索的结果\r\n            if(sp){\r\n                var pp = sp.point;\r\n                lastSearch.lng = pp.lng;\r\n                lastSearch.lat = pp.lat;  //得到搜索位置的经纬度\r\n                //搜索显示结果列表\r\n                showSearchPlace(lastSearch.lng,lastSearch.lat,local.getResults().keyword);\r\n            }else{\r\n                showSearchPlace(0, 0, \'该地址百度地图解析失败\')\r\n            }\r\n        }\r\n    }\r\n```\r\n6. 百度地图根据经纬度获取当前地址：\r\n```\r\n    /**\r\n     * 根据经纬度获取地址\r\n     * @param lng\r\n     * @param lat\r\n     */\r\n    function getAddressBylnglat(lng, lat){\r\n        point = new BMap.Point(lng, lat);   //实例化\r\n        var marker = new BMap.Marker(point);// 创建标注\r\n        map.clearOverlays();                //添加新的标注前先清除其他的标注\r\n        map.addOverlay(marker);             // 将标注添加到地图中\r\n        var getData = new BMap.Geocoder();  //根据经纬度获取地址\r\n        getData.getLocation(point, function(rs){\r\n            var pointAddress = rs.addressComponents;\r\n            var address = pointAddress.province+pointAddress.city+pointAddress.district+pointAddress.street+pointAddress.streetNumber;\r\n            addTextToPoint(marker, address);//增加文字信息\r\n            marker.enableDragging();        //标注可拖拽\r\n            // 开启事件监听\r\n            marker.addEventListener(&quot;dragend&quot;, function (e) {\r\n                var x = e.point.lng; //经度\r\n                var y = e.point.lat; //纬度\r\n                //根据经纬度获取地址信息\r\n                getAddressBylnglat(x, y);\r\n            });;\r\n            //修改地图底部的地址信息\r\n            //$(\'#suggestId\').val(\'\');\r\n            clearAddress();                        //自定义方法，清除掉之前的记录\r\n            showSearchPlace(lng, lat, address)     //自定义方法，把查询到的地址和经纬度显示在页面上\r\n        });\r\n    }\r\n```\r\n7. 百度地图根据经纬度和地址信息在地图中创建标注同时文字信息：\r\n```\r\n    /**\r\n     * 在地图上根据查询的地址创建标注\r\n     * @param\r\n     */\r\n    function makePoint(lng, lat, address){\r\n        var point = new BMap.Point(lng, lat);\r\n        map.centerAndZoom(point, 15);  //地址显示级别\r\n        var marker = new BMap.Marker(point);// 创建标注\r\n        map.clearOverlays();                //添加新的标注前先清除其他的标注\r\n        map.addOverlay(marker);             // 将标注添加到地图中\r\n        addTextToPoint(marker, address);    //增加文字信息\r\n        marker.enableDragging();            //标注可拖拽\r\n        // 开启事件监听\r\n        marker.addEventListener(&quot;dragend&quot;, function (e) {\r\n            var x = e.point.lng; //经度\r\n            var y = e.point.lat; //纬度\r\n            //根据经纬度获取地址信息\r\n            getAddressBylnglat(x, y);\r\n        });\r\n    }\r\n    //标注上增加文字信息\r\n    function addTextToPoint(marker, address){\r\n        var label = new BMap.Label(address,{offset:new BMap.Size(20,-10)});\r\n	    marker.setLabel(label);\r\n    }\r\n```',2,1,1536397798,0,10,0,1,0),(47,2,2,'百度地图和高德地图结合在web中的使用（二）','在做一个关于地理位置字段时，初始位置使用百度地图获取时失败，获取的位置信息不准确，奈何产品说友商好使的啊，F12看后是采用的高德，所以在这采用高德地图获取初始位置，其他的还是用百度地图','','### 百度地图和高德地图结合在web中的使用（二）\r\n背景：在做一个关于地理位置字段时，初始位置使用百度地图获取时失败，获取的位置信息不准确，奈何产品说友商好使的啊，F12看后是采用的高德，所以在这采用高德地图获取初始位置，其他的还是用百度地图\r\n\r\n---\r\n\r\n1. 注册高德，创建实例，获取key值\r\n2. 引入js\r\n3. 高德地图获取获取当前位置：\r\n```\r\n//获取当前位置\r\nfunction getCurrentLocation(){\r\n    var gdmap, geolocation;\r\n    //加载地图，调用浏览器定位服务\r\n    gdmap = new AMap.Map(\'\');   //创建实例（如果需要地图页面，参数不为空，参数为div的id值）\r\n    gdmap.plugin(\'AMap.Geolocation\', function() {\r\n        geolocation = new AMap.Geolocation({\r\n            enableHighAccuracy: true,//是否使用高精度定位，默认:true\r\n            timeout: 10000,          //超过10秒后停止定位，默认：无穷大\r\n        });\r\n        gdmap.addControl(geolocation);\r\n        geolocation.getCurrentPosition();\r\n        AMap.event.addListener(geolocation, \'complete\', onComplete);//返回定位信息\r\n        AMap.event.addListener(geolocation, \'error\', onError);      //返回定位出错信息\r\n    });\r\n}\r\n/*\r\n * 解析位置结果，得到高德的经纬度地址\r\n */\r\nfunction onComplete(data){\r\n    var gdlng = data.position.getLng();\r\n    var gdlat = data.position.getLat();\r\n    bd_encrypt(gdlng, gdlat);\r\n}\r\n//定位出错\r\nfunction onError(data){\r\n    window.parent.tipObj.showError(\'未检测到您的当前位置，请刷新后重试\',3);\r\n    return false;\r\n}\r\n```\r\n4. 高德坐标转百度（传入经度、纬度）\r\n```\r\n/*\r\n * 高德坐标转百度（传入经度、纬度），得到百度的经纬度\r\n * @param gdlng  高德经度\r\n * @param gdlat  高德纬度\r\n */\r\nfunction bd_encrypt(gdlng, gdlat){\r\n    var X_PI = Math.PI * 3000.0 / 180.0;\r\n    var x = gdlng, y = gdlat;\r\n    var z = Math.sqrt(x * x + y * y) + 0.00002 * Math.sin(y * X_PI);\r\n    var theta = Math.atan2(y, x) + 0.000003 * Math.cos(x * X_PI);\r\n    var bd_lng = (z * Math.cos(theta) + 0.0065).toFixed(8);\r\n    var bd_lat = (z * Math.sin(theta) + 0.006).toFixed(8);\r\n    getAddressBylnglat(bd_lng, bd_lat);  //自定义方法，通过百度api获取地址\r\n}\r\n```\r\n5. 根据百度经纬度获取详细地址\r\n```\r\n/*\r\n * 参数为百度的经纬度\r\n */\r\nfunction getAddressBylnglat(lng, lat){\r\n    var aId = $(&quot;#aId&quot;).val();\r\n    point = new BMap.Point(lng, lat);\r\n    var getData = new BMap.Geocoder();  //根据经纬度获取地址\r\n    getData.getLocation(point, function(rs){\r\n        var pointAddress = rs.addressComponents;\r\n        var address = pointAddress.province+pointAddress.city+pointAddress.district+pointAddress.street+pointAddress.streetNumber;\r\n        var localAddress = address + \'，\'+ \'经度：\' + lng + \'、\'+\'纬度：\'+lat;\r\n        //HACK 保存当前位置（暴力解决下吧）\r\n        sessionStorage.setItem(\'currentLocation_\'+aId,  localAddress);   //把获取到的当前位置信息保存在sessionStorage中来使用\r\n    });\r\n}\r\n```',2,1,1536401800,0,7,0,1,0),(48,2,1,'php把阿拉伯数字转为银行数字大写','前言：之前在做一个外贸公司的询报价系统时用到了记录关于金额的数据，一般阿拉伯数字都需要转为银行使用的大写数字，在这简单记录一下','','### php把阿拉伯数字转为银行数字大写\r\n\r\n前言：之前在做一个外贸公司的询报价系统时用到了记录关于金额的数据，一般阿拉伯数字都需要转为银行使用的大写数字，在这简单记录一下\r\n\r\n--- \r\n```\r\n/*\r\n * 数字金额转换成中文大写金额的函数\r\n * String Int  $num  要转换的小写数字或小写字符串\r\n * return 大写数字\r\n */\r\npublic function num_to_rmb($num){\r\n    $c1 = &quot;零壹贰叁肆伍陆柒捌玖&quot;;\r\n    $c2 = &quot;分角元拾佰仟万拾佰仟亿&quot;;\r\n    //精确到分后面就不要了，所以只留两个小数位\r\n    $num = round($num, 2); \r\n    //将数字转化为整数\r\n    $num = $num * 100;\r\n    if (strlen($num) &gt; 10) {\r\n        return &quot;金额太大，请检查&quot;;\r\n    } \r\n    $i = 0;\r\n    $c = &quot;&quot;;\r\n    while (1) {\r\n        if ($i == 0) {\r\n            //获取最后一位数字\r\n            $n = substr($num, strlen($num)-1, 1);\r\n        } else {\r\n            $n = $num % 10;\r\n        }\r\n        //每次将最后一位数字转化为中文\r\n        $p1 = substr($c1, 3 * $n, 3);\r\n        $p2 = substr($c2, 3 * $i, 3);\r\n        if ($n != \'0\' || ($n == \'0\' &amp;&amp; ($p2 == \'亿\' || $p2 == \'万\' || $p2 == \'元\'))) {\r\n            $c = $p1 . $p2 . $c;\r\n        } else {\r\n            $c = $p1 . $c;\r\n        }\r\n        $i = $i + 1;\r\n        //去掉数字最后一位了\r\n        $num = $num / 10;\r\n        $num = (int)$num;\r\n        //结束循环\r\n        if ($num == 0) {\r\n            break;\r\n        } \r\n    }\r\n    $j = 0;\r\n    $slen = strlen($c);\r\n    while ($j &lt; $slen) {\r\n        //utf8一个汉字相当3个字符\r\n        $m = substr($c, $j, 6);\r\n        //处理数字中很多0的情况,每次循环去掉一个汉字“零”\r\n        if ($m == \'零元\' || $m == \'零万\' || $m == \'零亿\' || $m == \'零零\') {\r\n            $left = substr($c, 0, $j);\r\n            $right = substr($c, $j + 3);\r\n            $c = $left . $right;\r\n            $j = $j-3;\r\n            $slen = $slen-3;\r\n        } \r\n        $j = $j + 3;\r\n    } \r\n    //这个是为了去掉类似23.0中最后一个“零”字\r\n    if (substr($c, strlen($c)-3, 3) == \'零\') {\r\n        $c = substr($c, 0, strlen($c)-3);\r\n    }\r\n    //将处理的汉字加上“整”\r\n    if (empty($c)) {\r\n        return &quot;零元整&quot;;\r\n    }else{\r\n        return $c . &quot;整&quot;;\r\n    }\r\n}\r\n//echo num_to_rmb(23000000.00); //贰仟叁佰万元整\r\n```\r\n',3,0,1536636256,0,1,0,1,0),(49,2,1,'根据城市名称获取天气状况接口','根据城市名称获取天气状况接口','','#### 接口地址：\r\nhttp://wthrcdn.etouch.cn/weather_mini?city=北京',3,0,1536645825,0,8,0,1,0),(50,2,14,'常用的几条sql语句','常用的几条sql语句','','### 常用的几条sql语句\r\n---\r\n\r\n- 选择：select * from table1 where 范围\r\n\r\n- 插入：insert into table1(field1,field2) values(value1,value2)\r\n\r\n- 删除：delete from table1 where 范围\r\n\r\n- 更新：update table1 set field1=value1 where 范围\r\n\r\n- 查找：select * from table1 where field1 like ’%value1%’\r\n\r\n- 排序：select * from table1 order by field1,field2 [desc]\r\n\r\n- 总数：select count as totalcount from table1\r\n\r\n- 求和：select sum(field1) as sumvalue from table1\r\n\r\n- 平均：select avg(field1) as avgvalue from table1\r\n\r\n- 最大：select max(field1) as maxvalue from table1\r\n\r\n- 最小：select min(field1) as minvalue from table1\r\n\r\n',14,0,1536656120,0,10,0,1,0),(51,2,2,'获取select选中的内容','获取select选中的内容,简单记一下','','### 获取select选中的内容\r\n---\r\n\r\n1. js获取select标签选中的值\r\n```\r\nvar obj = document.getElementById(&quot;selectId&quot;);//获取select对象\r\nvar index = obj.selectedIndex; // 选中索引\r\nvar text = obj.options[index].text; // 选中文本\r\nvar value = obj.options[index].value; // 选中值\r\n```\r\n2. jQuery中获得选中select值\r\n- 第一种方法：\r\n```\r\n$(\'#testSelect option:selected\').text();//选中的文本\r\n$(\'#testSelect option:selected\') .val();//选中的值\r\n$(&quot;#testSelect &quot;).get(0).selectedIndex;//索引\r\n```\r\n- 第二种方式\r\n```\r\n$(&quot;#tesetSelect&quot;).find(&quot;option:selected&quot;).text();//选中的文本\r\n$(&quot;#tesetSelect&quot;).find(&quot;option:selected&quot;).val();\r\n$(&quot;#tesetSelect&quot;).find(&quot;option:selected&quot;).get(0).selectedIndex;\r\n```',2,0,1536896391,0,1,0,1,0),(52,2,3,'git命令设置简写（别名）','有时候在执行git命令比较多的情况下，每次敲git命令比较费时，同时有些命令比如cherry-pick这种比较长时更是费时，所以可以通过设置命令行简写来设置。','','\r\n### git命令设置简写（别名）\r\n---\r\n\r\n修改方法：\r\n\r\n### windows下：###\r\n\r\n打开.gitconfig文件(在git安装目录下的\\mingw64\\etc)，编辑如下：（最后边追加）\r\n```\r\n[alias]\r\n    ckt = checkout\r\n    ci = commit\r\n    st = status\r\n    pl = pull\r\n    ps = push\r\n    gdf = gitdiff\r\n    l = log\r\n    cp = cherry-pick\r\n    ca = commit -a\r\n    b = branch\r\n    mg = merge\r\n    fh = fetch\r\n```\r\n### linux下：###\r\n\r\n任意路径下输入：vim ~/.gitconfig，在后边追加如下内容：\r\n```\r\n[alias]\r\n    ckt = checkout\r\n    ci = commit\r\n    st = status\r\n    pl = pull\r\n    ps = push\r\n    gdf = gitdiff\r\n    l = log\r\n    cp = cherry-pick\r\n    ca = commit -a\r\n    b = branch\r\n    mg = merge\r\n    fh = fetch\r\n```',4,0,1537179939,0,8,0,1,0),(53,2,3,'git撤销本地提交但未push的记录','有时候本地执行commit命令或者cherry-pick命令后发现提交了不需要提交的东西，就需要把已提交的commit记录撤销下来，简单做下记录','','### git撤销本地提交但未push的记录\r\n---\r\n前言：有时候本地执行commit命令或者cherry-pick命令后发现提交了不需要提交的东西，就需要把已提交的commit记录撤销下来，简单做下记录\r\n\r\n1. 撤销本地分支的上一次git commit：\r\n```\r\ngit reset --hard HEAD\r\n```\r\n2. 撤销本地分支的n次commit提交：\r\n```\r\ngit reset HEAD~n （撤销最近的n次）\r\n```\r\n\r\n',4,0,1537250834,0,1,0,1,0),(54,2,4,'windowsServer部署站点','最近在和朋友一起买了个服务器，奈何他选的是windowsServer，无所谓了，就把自己的站点从之前的虚拟主机迁过来，记录下。','','### windowsServer部署站点\r\n---\r\n前言：最近在和朋友一起买了个服务器，奈何他选的是windowsServer，无所谓了，就把自己的站点从之前的虚拟主机迁过来，记录下。\r\n\r\n#### 准备工作：\r\n- 服务器上搭建php环境（phpStudy、wampServer、自己单个安装都行）\r\n- 服务器的mysql创建新的用户（关于这个遇到的坑，已经写了一篇记录了‘windows server服务器上mysql远程连接失败的坑’）\r\n- 服务器上安装好git，设置好username和useremail（非必须，只是为了拉取代码以及以后改东西方便一点）\r\n\r\n1、在php环境的项目根目录下执行git clone拉取代码\r\n2、修改配置文件，主要就是关于数据库的用户名密码等信息（从之前的虚拟主机迁到现在的windows下）\r\n3、修改apache配置文件，支持#Virtual hosts：\r\n```\r\n    #Virtual hosts\r\n    Include conf/extra/httpd-vhosts.conf\r\n```\r\n4、修改httpd-vhosts.conf配置文件，增加以下内容：\r\n```\r\n（以下注释只是在这作为说明，实际可以去掉）\r\n&lt;VirtualHost *:80&gt;\r\n    ServerAdmin webmaster@dummy-host2.example.com\r\n    DocumentRoot &quot;C:\\wkk\\phpStudy\\WWW\\www.wangkaikai.cn&quot;  //项目地址\r\n    ServerName www.alisleepy.top  //域名\r\n    ErrorLog &quot;logs/dummy-host2.example.com-error.log&quot; //日志\r\n    CustomLog &quot;logs/dummy-host2.example.com-access.log&quot; common //日志\r\n&lt;/VirtualHost&gt;\r\n```\r\n5、在自己的域名厂商那里重新进行域名解析，把地址指向新的服务器地址',3,0,1537496052,0,10,0,1,0),(55,2,1,'php二维数组去重','前言：php一维数组去重很简单，直接array_unique($arr)即可，但是二维数组去重就得自己去写了','','二维数组去重方法：\r\n```\r\n/*\r\n * 二维数组去重\r\n * 注意：二维数组中的元素个数必须一致，且键值也得一致，否则无意义\r\n * @param array $arr\r\n * @return array $arr_after\r\n */\r\npublic function array_unique_2DArr($arr=array()){\r\n    if(empty($arr) || !is_array($arr)){\r\n        return array();\r\n    }\r\n    /*******处理二维数组个数不一致问题  start 其他项目用可以去掉*******/\r\n    //判断数组中二维数组是否包含uniqueId，存在的话需要处理其他的日志信息，全部加上uniqueId，且uniqueId值必须相同\r\n    $hasUniqueId = false;\r\n    foreach($arr as $val){\r\n        if(array_key_exists(\'uniqueId\', $val)){\r\n            $hasUniqueId = true;\r\n            break;\r\n        }\r\n    }\r\n    //如果$arr中的二维数组中uniqueId存在，则其他也增加\r\n    if($hasUniqueId){\r\n        foreach($arr as $_k=&gt;$_val){\r\n            if(!array_key_exists(\'uniqueId\', $_val)){\r\n                //在$_val中增加unique,只是为了和其他的带有uniqueId键值的数组元素个数保持一致       \r\n                $_val_keys = array_keys($_val);\r\n                $_val_vals = array_values($_val);\r\n                array_unshift($_val_keys, \'uniqueId\');\r\n                array_unshift($_val_vals, \'0_0\');\r\n                $arr[$_k] = array_combine($_val_keys, $_val_vals);\r\n            }\r\n        }\r\n    }\r\n    /********处理二维数组个数不一致问题  end********/\r\n    foreach($arr[0] as $k =&gt; $v){  \r\n        $arr_inner_key[]= $k;   //先把二维数组中的内层数组的键值记录在在一维数组中  \r\n    }\r\n    foreach ($arr as $k =&gt; $v){  \r\n        $v =join(&quot;^&quot;,$v);   //降维 用implode()也行 ，注意，拆分时不能用逗号，用其他的不常用符号，逗号可能会由于数据本身含有逗号导致失败\r\n        $temp[$k] =$v;      //保留原来的键值  \r\n    }\r\n    $temp =array_unique($temp);    //去重：去掉重复的字符串\r\n    foreach ($temp as $k =&gt; $v){  \r\n        $a = explode(&quot;^&quot;,$v);   //拆分后的重组 \r\n        $arr_after[$k]= array_combine($arr_inner_key,$a);  //将原来的键与值重新合并  \r\n    }\r\n    return $arr_after;  \r\n}\r\n```\r\n',3,0,1537955157,0,1,0,1,0),(56,2,2,'多个iframe中根据src获取特定iframe并执行操作','在项目中做一个批量编辑工单时需要在一大堆的iframe中的某一个iframe里边再用模态框的形式显示编辑区域，然后再在模态框里边加入iframe实现批量编辑的页面，最后在提交后无法实现跳转，就是当前模态框无法关闭，想到模态框的关闭是通过modal:hide关闭，就想在后端输出js代码直接通过click事件来关闭模态框','','具体问题：\r\n- 在多个iframe中找到当前的iframe\r\n- 找到当前iframe之后操作iframe中的模态框关闭按钮，增加click事件\r\n\r\n解决办法：\r\n- 通过iframe的src属性寻找iframe\r\n- 通过$(&quot;#frame_1&quot;).contents().find(&quot;#test&quot;); 来找到iframe下页面中的模态框关闭按钮\r\n\r\n**通过iframe的src属性寻找iframe：**\r\n```\r\n//js前端获取\r\nvar ucrIframe = window.top.$(&quot;iframe[src=\'/osp2016/agent/tickets.php\']&quot;);\r\n```\r\n**获取iframe页面中的元素并添加事件：**\r\n```\r\nvar ucrIframe = window.top.$(&quot;iframe[src=\'/osp2016/agent/tickets.php\']&quot;);\r\n//获取iframe元素  **.contents().find()\r\neg : curIframe.contents().find(&quot;#closeModal&quot;).click();\r\n```\r\n',2,0,1538212957,0,1,0,1,0);

/*Table structure for table `ali_category` */

DROP TABLE IF EXISTS `ali_category`;

CREATE TABLE `ali_category` (
  `catId` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '分类ID',
  `catName` varchar(32) NOT NULL DEFAULT '' COMMENT '分类名称',
  PRIMARY KEY (`catId`)
) ENGINE=MyISAM AUTO_INCREMENT=15 DEFAULT CHARSET=utf8;

/*Data for the table `ali_category` */

insert  into `ali_category`(`catId`,`catName`) values (1,'php'),(2,'js'),(3,'工具'),(4,'服务器'),(5,'前端'),(6,'Go语言'),(7,'Nosql'),(14,'mysql');

/*Table structure for table `ali_config` */

DROP TABLE IF EXISTS `ali_config`;

CREATE TABLE `ali_config` (
  `cId` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '配置ID',
  `key` varchar(64) NOT NULL COMMENT '配置项',
  `value` text NOT NULL COMMENT '配置值',
  PRIMARY KEY (`cId`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

/*Data for the table `ali_config` */

/*Table structure for table `ali_label` */

DROP TABLE IF EXISTS `ali_label`;

CREATE TABLE `ali_label` (
  `lId` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '标签Id',
  `lName` varchar(32) NOT NULL DEFAULT '' COMMENT '标签名',
  PRIMARY KEY (`lId`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8;

/*Data for the table `ali_label` */

insert  into `ali_label`(`lId`,`lName`) values (2,'js'),(3,'php'),(4,'git'),(5,'jquery'),(6,'linux'),(7,'vscode'),(8,'TP3'),(9,'TP5'),(10,'CSS'),(11,'phpstorm'),(12,'Go'),(13,'nosql'),(14,'mysql'),(15,'yaf');

/*Table structure for table `ali_reply` */

DROP TABLE IF EXISTS `ali_reply`;

CREATE TABLE `ali_reply` (
  `rId` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '回复ID',
  `uId` int(11) NOT NULL COMMENT '回复者Id',
  `bId` int(11) NOT NULL COMMENT '博客Id',
  `rContent` varchar(1000) NOT NULL COMMENT '回复内容',
  `add_time` int(11) NOT NULL COMMENT '回复时间',
  `rStatus` tinyint(1) NOT NULL DEFAULT '1' COMMENT '是否屏蔽（1不，0屏蔽）',
  PRIMARY KEY (`rId`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8;

/*Data for the table `ali_reply` */

insert  into `ali_reply`(`rId`,`uId`,`bId`,`rContent`,`add_time`,`rStatus`) values (1,1,1,'这是回复信息，这是回复信息，这是回复信息，这是回复信息，这是回复信息，',1234567876,1),(2,1,1,'这是回复信息，这是回复信息，这是回复信息，这是回复信息，这是回复信息，',1234567876,1),(3,1,1,'这是回复信息，这是回复信息，这是回复信息，这是回复信息，这是回复信息，',1234567876,1),(4,1,1,'这是回复信息，这是回复信息，这是回复信息，这是回复信息，这是回复信息，',1234567876,1),(5,1,1,'这是回复信息，这是回复信息，这是回复信息，这是回复信息，这是回复信息，',1234567876,1),(6,1,1,'这是恢复内容，本地做完后测试的',1524398156,1),(7,1,1,'3432432423',1524401743,1),(8,1,1,'1111111111',1524411581,1),(9,1,12,'顺带测试下回复',1525616763,1),(10,1,12,'我就想看看你这个测试能不能用',1525712767,1),(11,1,25,'小菜',1527682878,1),(12,1,30,'&lt;p&gt;&lt;span&gt;本地仓库和远程关联时不用ssh，用http如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;git remote add origin&amp;nbsp;&lt;/span&gt;http://admin@192.168.199.188:10101/r/go/beego.git&lt;/p&gt;',1530369630,1),(13,1,44,'&lt;p&gt;/*&lt;/p&gt;&lt;p&gt;&amp;nbsp; ┏┛┻━━━━┛┻┓&lt;/p&gt;&lt;p&gt;&amp;nbsp; ┃　&amp;nbsp; ━　 ┃&lt;/p&gt;&lt;p&gt;&amp;nbsp; ┃　┳┛ ┗┳ ┃&lt;/p&gt;&lt;p&gt;&amp;nbsp; ┃　　&amp;nbsp; &amp;nbsp; ┃&lt;/p&gt;&lt;p&gt;&amp;nbsp; ┃　　┻　 ┃　　　　&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp; ┗━┓　　┏━┛&lt;/p&gt;&lt;p&gt;&lt;span&gt;	&lt;/span&gt;┃　　┃&amp;nbsp; &amp;nbsp;代码无BUG！&lt;/p&gt;&lt;p&gt;&lt;span&gt;	&lt;/span&gt;┃　　┗━━━━━━━━━┓&lt;/p&gt;&lt;p&gt;&lt;span&gt;	&lt;/span&gt;┃　　　　　　　┣┓&lt;/p&gt;&lt;p&gt;&lt;span&gt;	&lt;/span&gt;┃　　　　&amp;nbsp; &amp;nbsp; &amp;nbsp; ┏┛&lt;/p&gt;&lt;p&gt;&lt;span&gt;	&lt;/span&gt;┗━┓ ┓ ┏━━┳ ┓ ┏━┛&lt;/p&gt;&lt;p&gt;&lt;span&gt;	&lt;/span&gt;&amp;nbsp; ┃ ┫ ┫&amp;nbsp; ┃ ┫ ┫&lt;/p&gt;&lt;p&gt;&lt;span&gt;	&lt;/span&gt;&amp;nbsp; ┗━┻━┛&amp;nbsp; ┗━┻━┛&lt;/p&gt;&lt;p&gt;*/&lt;/p&gt;',1536047081,1);

/*Table structure for table `ali_setting` */

DROP TABLE IF EXISTS `ali_setting`;

CREATE TABLE `ali_setting` (
  `sId` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '设置表Id',
  `key` varchar(20) NOT NULL DEFAULT '' COMMENT '设置项关键字',
  `value` text NOT NULL COMMENT '设置项内容',
  PRIMARY KEY (`sId`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;

/*Data for the table `ali_setting` */

insert  into `ali_setting`(`sId`,`key`,`value`) values (1,'about_me','一个从事php后端的web开发者，技术一般，学过C/C++/php,对linux、Go等感兴趣，喜欢把玩各种小工具，钟情Emacs，但不感冒vim，喜欢敲代码，裸框架从零开始手敲一个站点记录点滴。（非大神，不喜勿喷，只是作为个人笔记）'),(2,'motto','一步一步向上爬，风吹雨打我也怕!'),(3,'viewNum','5901'),(4,'addcode','1993306'),(5,'friendlyurl','[{\"name\":\"\\u6211\\u7684\\u535a\\u5ba2\\u56ed\",\"url\":\"https:\\/\\/www.cnblogs.com\\/alisleepy\"},{\"name\":\"\\u91d1\\u4e07\\u7ef4\\u516c\\u53f8\",\"url\":\"https:\\/\\/www.gnway.com\"},{\"name\":\"\\u5e2e\\u62118\\u667a\\u80fd\\u5ba2\\u670d\",\"url\":\"https:\\/\\/www.bangwo8.com\"},{\"name\":\"\\u65b9\\u53ef\\u53ef\",\"url\":\"https:\\/\\/www.fankers.cn\"}]'),(6,'weather','{\"code\":\"40310011\",\"msg\":\"invalid User-Agent header\"}');

/*Table structure for table `ali_user` */

DROP TABLE IF EXISTS `ali_user`;

CREATE TABLE `ali_user` (
  `uId` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '用户ID',
  `uName` varchar(32) NOT NULL DEFAULT '' COMMENT '用户名',
  `uPassword` varchar(64) DEFAULT NULL COMMENT '密码',
  `uEmail` varchar(64) NOT NULL DEFAULT '' COMMENT '邮箱',
  `add_time` int(11) NOT NULL COMMENT '添加时间',
  `uStatus` tinyint(1) NOT NULL DEFAULT '1' COMMENT '状态（1正常，0删除）',
  PRIMARY KEY (`uId`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8;

/*Data for the table `ali_user` */

insert  into `ali_user`(`uId`,`uName`,`uPassword`,`uEmail`,`add_time`,`uStatus`) values (1,'王凯凯','123456','wangkaikai@hotmail.com',1234567865,1),(2,'kaikaiwang','123456','wangkaikai@hotmail.com',1234543212,1),(3,'alisleepy',NULL,'alisleepy@hotmail.com',1524398156,1),(4,'测试',NULL,'wkk@hotmail.com',1524401743,1),(5,'324',NULL,'qweqweqwe@hotmail.com',1524411581,1),(6,'王凯凯',NULL,'alisleepy@hotmail.com',1525616763,1),(7,'王凯凯',NULL,'wkkvow@hotmail.com',1525712767,1),(8,'小菜',NULL,'1445581073@qq.com',1527682878,1),(9,'王凯凯',NULL,'wkkvow@hotmail.com',1530369630,1),(10,'自己',NULL,'alisleepy@hotmail.com',1536047081,1);

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
